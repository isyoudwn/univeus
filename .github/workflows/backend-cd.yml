name: backend-cd-prod
on:
  pull_request:
    branches:
      - main
    types:
      - closed

env:
  DOCKERHUB_REPOSITORY: isyoudwn
  DOCKER_CONTAINER_NAME: univeus-app

jobs:
  # 도커 이미지를 빌드하고 hub에 푸시
  build-and-push:
    if: |
      github.event.pull_request.merged == true &&
      github.event.pull_request.base.ref == 'main' &&
      github.event.pull_request.head.ref == 'develop'

    runs-on: ubuntu-latest
    env:
      TZ: 'Asia/Seoul'
      ACCESS_KEY_ID: ${{ secrets.ACCESS_KEY_ID }}
      API_KEY: ${{ secrets.API_KEY }}
      BUCKET_NAME: ${{ secrets.BUCKET_NAME }}
      FROM: ${{ secrets.FROM }}
      MONGO_URI: ${{ secrets.MONGO_URI }}
      SECRET_ACCESS_KEY: ${{ secrets.SECRET_ACCESS_KEY }}
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
      REGION: ${{ secrets.REGION }}
      DB_URL: ${{ secrets.DB_URL }}
      USER_NAME: ${{ secrets.USER_NAME }}
      PASSWORD: ${{ secrets.PASSWORD }}
      DRIVER_CLASS_NAME: ${{ secrets.DRIVER_CLASS_NAME }}
      JASYPT_PASSWORD: ${{ secrets.JASYPT_PASSWORD }}

    steps:
      - uses: actions/checkout@v4
        with:
          ref: main

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Clean Build With Gradle Wrapper (테스트 제외)
        run: chmod +x ./gradlew && ./gradlew build -x test

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      # 도커 허브 로그인
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      # 기존 latest를 previous로 백업
      - name: Back Up Image For Rollback
        run: |
          docker pull ${{ secrets.DOCKERHUB_USERNAME }}/$DOCKERHUB_REPOSITORY:latest || true
          docker tag ${{ secrets.DOCKERHUB_USERNAME }}/$DOCKERHUB_REPOSITORY:latest ${{ secrets.DOCKERHUB_USERNAME }}/$DOCKERHUB_REPOSITORY:previous || true
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/$DOCKERHUB_REPOSITORY:previous || true

      - name: Docker Image Build And Push
        run: |
          docker build --build-arg JASYPT_ENCRYPTOR_PASSWORD=${{ secrets.JASYPT_PASSWORD }} \
          -t ${{ secrets.DOCKERHUB_USERNAME }}/$DOCKERHUB_REPOSITORY:${{ github.sha }}-prod \
          -f Dockerfile .
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/$DOCKERHUB_REPOSITORY:${{ github.sha }}-prod

  # EC2에 SSH 접속하여 배포
  deploy-to-ec2:
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:
      - name: SSH into EC2 and Deploy
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          script: |
            chmod +x /home/ec2-user/deploy.sh
            /home/ec2-user/deploy.sh ${{ github.sha }}-prod
